p *(int32_t*) mazo->first->data->number
x *(int32_t*) mazo->first->data->number
p *(card_t*) mazo->first->data->number
n
q
b prueba_list
run
n
s
n
p *(list_t*) l
p *(list_t*) l->first
p *(list_t*) l->last
p * l->last
p * l->first
p *(listElem_t*) l->last
p *(listElem_t*) *l->last
p *(listElem_t*) *l->last->data
q
b listRemove
run
n
p *l
p *l->first
p *l->first->data
x *l->first->data
x *(card_t*) *l->first->data

x *(card_t**) *l->first->data
x (card_t**) *l->first->data
n
n
n
p *aux
p *aux-data
p *aux->data
p *aux->next
p *(card_t*) *aux->data
p *(card_t*) aux->data
p *(card_t*) aux->data->stacked
p *(list_t*) aux->data->stacked
p *((list_t*) aux->data->stacked)
p (*(list_t*) aux->data->stacked)
p (*(list_t*) (aux->data->stacked))
p *(list_t*) (aux->data->stacked)
n
p l->first
n
p *aux
p *aux->data
p *(card_t*) aux->data
p *(card_t*) aux->data
n
p *(card_t*) aux->data
n
q
b main
run
n
q
b main
run
n
n
q
b main
run
n
q
b main
run
n
s
n
n
q
b test_array
run
n
q
b test_array
run
n
p data
p (char*)data
n
p (char*)data
p (int*)data
x data
x (int*)
p 0xa0a0a0a310a0a
x 0xa0a0a0a310a0a
n
q
b test_array
run
n
p (int*)data
x 0xa0a0a0a310a0a
p 0xa0a0a0a310a0a
p (int)data
x (int)data
p *data
p (int)*data
p (int) *data
p (char*) *data
p (char*) data
q
b main
run
n
s
n
q
b main
run
n
s
n
p r12
p $r12
p $r15
q
b main
run
n
q
b 65
run
n
s
n
p $r13
p /d $r13
x /d $r13
p *(array_t*) r13
p *(array_t*) $r13
p *(array_t*) $rbi
p *(array_t*) $rdi
p *(array_t*) $rdi->data
p *(array_t*) rdi->data
p *(data*) rdi->data
p *(char*) $r13
p *(char**) $r13
q
b prueba_array
run
n
s
n
s
n
p $rdi
p *(card_t*)rdi
p *(card_t*) rdi
p *(card_t*) $rdi
n
p *(card_t*) $r12
n
p *(card_t*) $r13
p *(card_t*) $r12
q
b arrayDelete
run
n
s
n
p *(card_t*) $r13
p *(card_t*) $rdi
p *(char*) $rdi
x *(char*) $rdi
p *(char*) $r13
x *(char*) $r13
p *(char*) 0x0000000000406790
n
n
q
b arrayDelete
run
n
s
n
n
q
b arrayDelete
run
n
s
n
s
n
p *(char*) $rdi
n
p *(char*) $rdi
n
s
p $rdi
p *a
p *(int32_t*)a
p *(int32_t*) $a
p 
p *(int32_t*) rdi
p *(int32_t*) $rdi
n
s
n
p *(list_t*) $l
p *(list_t*) $rdi
n
n
q
q
b arrayDelete
run
n
s
n
p $r15
p *(list_t*) $r15
q
b arrayDelete
ls
run
n
s
n
p %r15
p $r15
p *(list_t*) $r15
n
q
b arrayDelete
run
n
s
n
n
s
n
q
b arrayDelete
run
n
s
n
p *(int32_t*) $13
p *(uint8_t*) $13
n
q
b arrayDelete
run
n
p *(uint8_t) $r13
p (uint8_t) $r13
n
q
